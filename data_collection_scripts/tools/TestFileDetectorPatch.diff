diff --git a/pom.xml b/pom.xml
index e4449be..77c00b1 100644
--- a/pom.xml
+++ b/pom.xml
@@ -9,6 +9,17 @@
     <version>0.1</version>
     <build>
         <plugins>
+            <plugin>
+                <groupId>org.apache.maven.plugins</groupId>
+                <artifactId>maven-assembly-plugin</artifactId>
+                <configuration>
+                    <archive>
+                        <manifest>
+                            <mainClass>Main</mainClass>
+                        </manifest>
+                    </archive>
+                </configuration>
+            </plugin>
             <plugin>
                 <groupId>org.apache.maven.plugins</groupId>
                 <artifactId>maven-compiler-plugin</artifactId>
@@ -17,6 +28,51 @@
                     <target>1.8</target>
                 </configuration>
             </plugin>
+            <plugin>
+                <groupId>org.apache.maven.plugins</groupId>
+                <artifactId>maven-jar-plugin</artifactId>
+                <configuration>
+                    <archive>
+                        <manifestFile>src/resources/META-INF/MANIFEST.MF</manifestFile>
+                    </archive>
+                </configuration>
+            </plugin>
+
+            <plugin>
+                <groupId>org.apache.maven.plugins</groupId>
+                <artifactId>maven-dependency-plugin</artifactId>
+                <executions>
+                    <execution>
+                        <id>copy-dependencies</id>
+                        <phase>package</phase>
+                        <goals>
+                            <goal>copy-dependencies</goal>
+                        </goals>
+                        <configuration>
+                            <outputDirectory>${project.build.directory}</outputDirectory>
+                            <overWriteReleases>false</overWriteReleases>
+                            <overWriteSnapshots>true</overWriteSnapshots>
+                        </configuration>
+                    </execution>
+                </executions>
+            </plugin>
+            <plugin>
+                <artifactId>maven-assembly-plugin</artifactId>
+                <executions>
+                    <execution>
+                        <phase>package</phase>
+                        <goals>
+                            <goal>single</goal>
+                        </goals>
+                    </execution>
+                </executions>
+                <configuration>
+                    <descriptorRefs>
+                        <descriptorRef>jar-with-dependencies</descriptorRef>
+                    </descriptorRefs>
+                </configuration>
+            </plugin>
+
         </plugins>
     </build>
 
@@ -41,4 +97,3 @@
     </dependencies>
 
 </project>
-
diff --git a/src/main/java/Main.java b/src/main/java/Main.java
index a78c9d2..72f8849 100644
--- a/src/main/java/Main.java
+++ b/src/main/java/Main.java
@@ -19,6 +19,14 @@ public class Main {
                 return;
             }
         }
+        String appName="";
+        String tag="";
+        if(!args[1].isEmpty()){
+            appName = args[1];
+        }
+        if(!args[2].isEmpty()){
+            tag = args[2];
+        }
         final String rootDirectory = args[0];
         TestFileDetector testFileDetector = TestFileDetector.createTestFileDetector();
         ResultsWriter resultsWriter = ResultsWriter.createResultsWriter();
@@ -36,7 +44,7 @@ public class Main {
         Util.writeOperationLogEntry("Obtain method details", Util.OperationStatus.Started);
         for (Path file : files) {
             try {
-                classEntity = testFileDetector.runAnalysis(file);
+                classEntity = testFileDetector.runAnalysis(file, appName, tag);
                 resultsWriter.outputToCSV(classEntity);
             } catch (Exception e) {
                 Util.writeException(e, "File: " + file.toAbsolutePath().toString());
diff --git a/src/main/java/TestFileDetector.java b/src/main/java/TestFileDetector.java
index 1b557d9..a7cd4ab 100644
--- a/src/main/java/TestFileDetector.java
+++ b/src/main/java/TestFileDetector.java
@@ -45,14 +45,14 @@ public class TestFileDetector {
         debt = new ArrayList<>();
     }
 
-    public ClassEntity runAnalysis(Path filePath) throws FileNotFoundException {
+    public ClassEntity runAnalysis(Path filePath, String appName, String tag) throws FileNotFoundException {
         initialize();
 
         CompilationUnit compilationUnit=null;
 
         if(filePath != null){
             System.out.println("Processing: "+filePath);
-            classEntity = new ClassEntity(filePath);
+            classEntity = new ClassEntity(filePath, appName, tag);
             FileInputStream fileInputStream = new FileInputStream(classEntity.getFilePath());
             compilationUnit = JavaParser.parse(fileInputStream);
             ClassVisitor cv = new ClassVisitor();
diff --git a/src/main/java/entity/ClassEntity.java b/src/main/java/entity/ClassEntity.java
index 58c895c..b43949e 100644
--- a/src/main/java/entity/ClassEntity.java
+++ b/src/main/java/entity/ClassEntity.java
@@ -8,14 +8,18 @@ import java.util.Map;
 
 public class ClassEntity {
     private Path path;
+    private String appName;
+    private String tag;
     private List<MethodEntity> methods;
    // private Map<String, Boolean> imports;
     private ArrayList<String> imports;
     private String className;
     private ArrayList<String> technicalDebtComments;
 
-    public ClassEntity(Path path) {
+    public ClassEntity(Path path, String appName, String tag) {
         this.path = path;
+        this.appName = appName;
+        this.tag = tag;
     }
 
     public List<MethodEntity> getMethods() {
@@ -116,23 +120,22 @@ public class ClassEntity {
     }
 
     public String getRelativeFilePath() {
-        String filePath = path.toAbsolutePath().toString();
-        String[] splitString = filePath.split("\\\\");
-        StringBuilder stringBuilder = new StringBuilder();
-        for (int i = 0; i < 5; i++) {
-            stringBuilder.append(splitString[i] + "\\");
-        }
-        return filePath.substring(stringBuilder.toString().length()).replace("\\", "/");
+        return "";
+        // String filePath = path.toAbsolutePath().toString();
+        // String[] splitString = filePath.split("\\\\");
+        // StringBuilder stringBuilder = new StringBuilder();
+        // for (int i = 0; i < 5; i++) {
+        //     stringBuilder.append(splitString[i] + "\\");
+        // }
+        // return filePath.substring(stringBuilder.toString().length()).replace("\\", "/");
     }
 
     public String getAppName() {
-        String filePath = path.toAbsolutePath().toString();
-        return filePath.split("\\\\")[3];
+        return this.appName;
     }
 
     public String getTagName() {
-        String filePath = path.toAbsolutePath().toString();
-        return filePath.split("\\\\")[4];
+        return this.tag;
     }
 
     public ArrayList<String> getTechnicalDebtComments() {
