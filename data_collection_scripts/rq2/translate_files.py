'''
Translate a generated file to a format usable by the next project tool.
For more information check : https://github.com/TestSmells
'''

import sys

OUT_MAPPING_FILENAME = './OUT_M_{}'
OUT_SMELL_DETECT_FILENAME = './OUT_SD_{}'
MAPPING_FORMAT = '{}\n'
SMELL_DETECTION_FORMAT = '{},{},{}\n'

def test_detection_to_mapping(filename):
    '''
    Translates the file format generated by the test_detection tool
    to a format usable by the file mapping tool.

    In format (from Output_Class_*) :
        App,Tag,FilePath,RelativeFilePath,FileName,ClassName,TotalImports,TotalMethods,TotalMethodStatements,TotalTestMethods,AnnotationCount,TestsWithoutAnnotationCount,HasTestInFileName,HasTestInClassName,junitFrameworkTest,junitFrameworkTestCase,orgJunitTest,androidTestAndroidTestCase,androidTestInstrumentationTestCase,orgJunitAssert,androidTestActivityInstrumentationTestCase2,HasTechnicalDebtComment
    
    Out format :
        TestFileName
    '''
    out_filename = OUT_MAPPING_FILENAME.format(filename.split('/')[-1])

    with open(filename, 'r') as f_in, open(out_filename, 'w') as f_out:
        next(f_in) # Skip the header line
        for l in f_in:
            data = l.split(',')
            f_out.write(MAPPING_FORMAT.format(data[2]))

    return out_filename


def mapping_to_smell_detection(filename):
    '''
    Translates the file format generated by the test_detection tool
    to a format usable by the file mapping tool.

    In format (from Output_Class_*) :
        App,Tag,TestFilePath,ProductionFilePath,RelativeTestFilePath,RelativeProductionFilePath

    Out format :
        AppName,TestFilePath,ProductionFilePath
    '''
    out_filename = OUT_SMELL_DETECT_FILENAME.format(filename.split('/')[-1])

    with open(filename, 'r') as f_in, open(out_filename, 'w') as f_out:
        next(f_in)  # Skip the header line
        for l in f_in:
            data = l.split(',')
            f_out.write(SMELL_DETECTION_FORMAT.format(data[0], data[2], data[3]))

    return out_filename


if __name__ == '__main__':
    t = sys.argv[1]
    filename = sys.argv[2]

    print('Applying {} to {} ...'.format(t, filename))

    if t == 'td2m':
        test_detection_to_mapping(filename)
    elif t == 'm2sd':
        mapping_to_smell_detection(filename)
